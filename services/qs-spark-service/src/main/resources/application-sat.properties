#spark service
#Properties to update by user
server.port=8082
AWS_REGION=eu-west-2
AWS_ACCESS_KEY=AKIA3XKNU2WBSPTV6HHO
AWS_SECRET_KEY=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
#qs.rule.etl.output=s3://qsai-test121-processed/rule/
#qs.rule.job.output=qsai-test121-processed
qs.rule.etl.output=s3://qsai-dataquality-rule/rule/
qs.rule.job.output=qsai-dataquality-rule
qs.aws.use.config.buckets=true
qs.aws.config.buckets=qsai-nw-src,qsai-nw-dst
#Values can be Keys,IAM,Profile
qs.aws.access.method=PROFILE
aws.access.role=arn:aws:iam::806006084995:role/QS_SERVICE_ROLE

aws.credentials.accessKey=${AWS_ACCESS_KEY}
aws.credentials.secretKey=${AWS_SECRET_KEY}

dbHost=localhost
databaseName=opensourcedb
dbUsername=postgres
dbPassword=Sunil@1551
smtpUser=AKIA3XKNU2WB56ZGRYXS
smtpPassword=BFmyxQEmikiqwsy1PLGODTqQQVqpX8RY5we6lV+w0V4G
stripeSecretKey=sk_test_51IMv8CCXjfdxZzBVjSjDPPV7axOQrdvXme02pPn71ULyAROcbzBQ2tjdeWBZbVoENMN1VTICRnIGrMBEffcpn3I900MTd1Vf9v
PROJECT_NAME=sunil-local
LIVY_URL=http://devemr.quantumics.ai

qs.cloud.region=${AWS_REGION}
s3.credentials.accessKey=${AWS_ACCESS_KEY}
s3.credentials.secretKey=${AWS_SECRET_KEY}

glue.credentials.accessKey=${AWS_ACCESS_KEY}
glue.credentials.secretKey=${AWS_SECRET_KEY}

athena.credentials.accessKey=${AWS_ACCESS_KEY}
athena.credentials.secretKey=${AWS_SECRET_KEY}

qs.livy.base.url=${LIVY_URL}/sessions/
qs.livy.base.batches.url=${LIVY_URL}/batches/
qs.project.name=${PROJECT_NAME}

#default buckets need to create in s3
s3.images.project.bucketName=qsai-application-images/Project-Images
s3.images.user.bucketName=qsai-application-images/User-Images
s3.udf.bucketName=qsai-application-udf
qs.athena.query.output=s3://qs-athena-query-output/data/
qs.glue.etl.output=s3://qsai-test121-processed/
qs.eng.etl.output=s3://qsai-test121-processed/end
qs.s3.result.store=s3://qsai-eng-results
qs.service.server.host.url=http://dbackend.quantumics.ai/
qs.user.username=admin
qs.user.password=admin
spring.datasource.username=${dbUsername}
spring.datasource.password=${dbPassword}
spring.datasource.url=jdbc:postgresql://${dbHost}:5432/${databaseName}

qs.redash.user.url=http://35.179.41.144:5000/register
#------------------------------------------------------------------------------------------
#Common Properties No need to update by user
management.endpoints.web.exposure.include=*
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximumPoolSize=30
spring.datasource.hikari.max-lifetime=180000
spring.datasource.hikari.connectionTimeout=30000
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
server.tomcat.max-swallow-size=1000MB
server.tomcat.max-http-form-post-size=1000MB
spring.datasource.hikari.leak-detection-threshold=300000
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=false
spring.jpa.open-in-view=true
spring.main.allow-circular-references=true
cloud.aws.region.auto=false
spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=${java.io.tmpdir}
spring.servlet.multipart.max-file-size=20MB
qs.file.max-size=104857600
qs.athena.sleep=2000
qs.athena.query.limit=500
qs.livy.batch.job.max.timeout.period=300000
cloud.aws.stack.auto=false